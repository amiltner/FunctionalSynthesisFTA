type nat =
  | O
  | S of nat

type list =
  | Nil
  | Cons of nat * list

synth list -> nat -> list satisfying

[Nil,0] -> Nil,
[Nil,1] -> Nil,
[Nil,2] -> Nil,
[Cons(0,Nil),0] -> Cons(0,Nil),
[Cons(0,Nil),1] -> Nil,
[Cons(1,Nil),0] -> Cons(1,Nil),
[Cons(1,Nil),1] -> Nil,
[Cons(1,Cons(0,Nil)),0] -> Cons(1,Cons(0,Nil)),
[Cons(1,Cons(0,Nil)),1] -> Cons(0,Nil),
[Cons(1,Cons(0,Nil)),2] -> Nil,
[Cons(0,Cons(1,Nil)),0] -> Cons(0,Cons(1,Nil)),
[Cons(0,Cons(1,Nil)),1] -> Cons(1,Nil),
[Cons(0,Cons(1,Nil)),2] -> Nil,