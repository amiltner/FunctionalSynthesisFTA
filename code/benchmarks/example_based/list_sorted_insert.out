fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 binding _ with
      | Nil -> Cons (x . 1, x . 0)
      | Cons -> (match compare (x . 1) (Un_Cons (x . 0) . 0) binding _ with
                   | LT -> Cons (x . 1, x . 0)
                   | EQ -> x . 0
                   | GT -> Cons (Un_Cons (x . 0) . 0,
                                  f (Un_Cons (x . 0) . 1, x . 1)))