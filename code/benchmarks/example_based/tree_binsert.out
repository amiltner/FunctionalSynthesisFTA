fix (f : tree * nat -> tree) =
  fun (x:tree * nat) ->
    match x . 0 binding _ with
      | Leaf -> Node (x . 0, x . 1, x . 0)
      | Node -> (match comp_nat (Un_Node (x . 0) . 1) (x . 1) binding _ with
                   | CEq -> x . 0
                   | CGt -> Node (f (Un_Node (x . 0) . 0, x . 1),
                                   Un_Node (x . 0) . 1, Un_Node (x . 0) . 2)
                   | CLt -> Node (Un_Node (x . 0) . 0, Un_Node (x . 0) . 1,
                                   f (Un_Node (x . 0) . 2, x . 1)))