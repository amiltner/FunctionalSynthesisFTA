[(Cons (2, Nil),Cons (3, Nil))]
POSSIBLE CALLS
[(Cons (1, Cons (2, Nil)),[Cons (2, Cons (3, Nil))])]
[(false,(Cons (2, Nil),Cons (3, Nil)))]
[(Nil,Nil);(Cons (2, Nil),Cons (3, Nil))]
POSSIBLE CALLS
[(Cons (1, Cons (2, Nil)),[Cons (2, Cons (3, Nil))])]
[(true,(Nil,Nil));(true,(Cons (2, Nil),Cons (3, Nil)))]
[(Nil,Nil);(Cons (2, Nil),Cons (3, Nil))]
POSSIBLE CALLS
[(Cons (1, Cons (2, Nil)),[Cons (2, Cons (3, Nil))])]
[(true,(Nil,Nil));(true,(Cons (2, Nil),Cons (3, Nil)))]
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (S (Un_Cons x . 0), f (Un_Cons x . 1))