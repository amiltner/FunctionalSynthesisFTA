nat_compare :: arg1:Nat -> arg0:Nat -> Cmp
nat_compare = \n1 . \n2 . 
    match n1 with
      Z -> 
        match n2 with
          Z -> EQ
          S _ -> LT
      S m1 -> 
        match n2 with
          Z -> GT
          S m2 -> nat_compare m1 m2

list_insert :: arg1:NatList -> arg0:Nat -> NatList
list_insert = \xs . \n . 
    match xs with
      Nil -> Cons n Nil
      Cons head tail -> 
        match nat_compare n head with
          LT -> Cons n xs
          EQ -> xs
          GT -> Cons head (list_insert
                             tail n)

list_sort_sorted_insert :: xs:NatList -> {NatList|(list_is_sorted _v && len xs == len _v) && elems xs <= elems _v}
benchmarks/postconditional/list_sort_sorted_insert.sq:67: Error:
  Cannot match shape 'NatList'
  with shape 'Nat'
  when checking Nil :: Nat in
  \xs . 
    match nat_compare Z Nil with
